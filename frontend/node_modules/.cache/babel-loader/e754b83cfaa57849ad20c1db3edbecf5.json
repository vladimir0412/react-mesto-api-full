{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co'; // export const register = (email, password) => {\n//   return fetch(`${BASE_URL}/signup`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({email, password})\n//   })\n//   .then((response) => {\n//     try {\n//       if (response.status === 201){\n//         return response.json();\n//       } else {\n//         return Promise.reject(`Ошибка: ${response.status}`);\n//       }\n//     } catch(e){\n//       return (e)\n//     }\n//   })\n//   .then((res) => {\n//     return res;\n//   })\n// };\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","authorize","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","data","token","localStorage","setItem","getContent","res"],"sources":["C:/Users/Vladimir/dev/react-mesto-api-full/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n// export const register = (email, password) => {\n//   return fetch(`${BASE_URL}/signup`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({email, password})\n//   })\n//   .then((response) => {\n//     try {\n//       if (response.status === 201){\n//         return response.json();\n//       } else {\n//         return Promise.reject(`Ошибка: ${response.status}`);\n//       }\n//     } catch(e){\n//       return (e)\n//     }\n//   })\n//   .then((res) => {\n//     return res;\n//   })\n// };\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.token){\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  })\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(res => res.json())\n  .then(data => data)\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACP,KAAD;MAAQC;IAAR,CAAf;EAN2B,CAAvB,CAAL,CAQNO,IARM,CAQAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARZ,EASNF,IATM,CASAG,IAAD,IAAU;IACd,IAAIA,IAAI,CAACC,KAAT,EAAe;MACbC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC;MACA,OAAOD,IAAP;IACD;EACF,CAdM,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMI,UAAU,GAAIH,KAAD,IAAW;EACnC,OAAOV,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAkB,UAASQ,KAAM;IAH1B;EAF0B,CAAzB,CAAL,CAQNJ,IARM,CAQDQ,GAAG,IAAIA,GAAG,CAACN,IAAJ,EARN,EASNF,IATM,CASDG,IAAI,IAAIA,IATP,CAAP;AAUD,CAXM"},"metadata":{},"sourceType":"module"}