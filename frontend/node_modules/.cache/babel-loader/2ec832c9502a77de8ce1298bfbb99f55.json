{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladimir\\\\dev\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile\",\n    container: \"general\",\n    popupTitle: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    textButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-name\",\n      className: \"popup__input popup__input_type_name\",\n      type: \"text\",\n      name: \"name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input-name-error popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-career\",\n      className: \"popup__input popup__input_type_other\",\n      type: \"text\",\n      name: \"about\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input-career-error popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","useEffect","about","isOpen","onClose"],"sources":["C:/Users/Vladimir/dev/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name='profile'\n      container='general'\n      popupTitle='Редактировать профиль'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      textButton='Сохранить'>\n      <input id=\"input-name\" className=\"popup__input popup__input_type_name\"\n      type=\"text\" name=\"name\" minLength=\"2\" maxLength=\"40\" required />\n      <span className=\"input-name-error popup__error\"></span>\n      <input id=\"input-career\" className=\"popup__input popup__input_type_other\"\n      type=\"text\" name=\"about\" minLength=\"2\" maxLength=\"200\" required />\n      <span className=\"input-career-error popup__error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAE/B,MAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,kBAAjB,CAApB;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;EAEAT,KAAK,CAACY,SAAN,CAAgB,MAAM;IACpBJ,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;IACAI,cAAc,CAACN,WAAW,CAACQ,KAAb,CAAd;EACD,CAHD,EAGG,CAACR,WAAD,CAHH;EAKA,oBACE,QAAC,aAAD;IACE,IAAI,EAAC,SADP;IAEE,SAAS,EAAC,SAFZ;IAGE,UAAU,EAAC,2HAHb;IAIE,MAAM,EAAED,KAAK,CAACU,MAJhB;IAKE,OAAO,EAAEV,KAAK,CAACW,OALjB;IAME,UAAU,EAAC,wDANb;IAAA,wBAOE;MAAO,EAAE,EAAC,YAAV;MAAuB,SAAS,EAAC,qCAAjC;MACA,IAAI,EAAC,MADL;MACY,IAAI,EAAC,MADjB;MACwB,SAAS,EAAC,GADlC;MACsC,SAAS,EAAC,IADhD;MACqD,QAAQ;IAD7D;MAAA;MAAA;MAAA;IAAA,QAPF,eASE;MAAM,SAAS,EAAC;IAAhB;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAO,EAAE,EAAC,cAAV;MAAyB,SAAS,EAAC,sCAAnC;MACA,IAAI,EAAC,MADL;MACY,IAAI,EAAC,OADjB;MACyB,SAAS,EAAC,GADnC;MACuC,SAAS,EAAC,KADjD;MACuD,QAAQ;IAD/D;MAAA;MAAA;MAAA;IAAA,QAVF,eAYE;MAAM,SAAS,EAAC;IAAhB;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA3BQZ,gB;;KAAAA,gB;AA6BT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}